---
kind: pipeline
type: docker
name: default

steps:
  - name: build build image
    image: docker:dind
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
    commands:
      - docker build --no-cache -t com.rabobank.argos.buildimage:${DRONE_COMMIT} ./docker-build-image
#  - name: build
#    image: maven:3.6.2-ibmjava-alpine
#    environment:
#      JAVA_1_8_LOCATION: /usr/lib/jvm/java-1.8-openjdk
#      JAVA_11_LOCATION: /usr/lib/jvm/java-11-openjdk
#    volumes:
#      - name: mvn_cache
#        path: /root/.m2
#    commands:
#      - apk --no-cache add openjdk11
#      - apk --no-cache add openjdk8
#      - cp toolchains.xml.template ~/.m2/toolchains.xml
#      - mvn -q package
#      - ls -l argos-service/target

  - name: sonar
    image: com.rabobank.argos.buildimage:${DRONE_COMMIT}
    environment:
      SONAR_LOGIN:
        from_secret: sonar_login
    volumes:
      - name: mvn_cache
        path: /root/.m2
    commands:
      - mvn -q -e verify sonar:sonar -Dsonar.projectKey=sonar-argos -Dsonar.organization=argos-scc -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=3ffd7e4ccd935c94a6e8fa64f15c75db574ba673

volumes:
  - name: mvn_cache
    temp: {}
  - name: docker_sock
    host:
      path: /var/run/docker.sock
trigger:
  event:
    - push

