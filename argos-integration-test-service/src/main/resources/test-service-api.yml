#
# Copyright (C) 2020 Argos Notary Co√∂peratie UA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

openapi: "3.0.0"
info:
  version: 1.0.0
  title: Argos Integration Test Service
  license:
    name: Apache License 2.0
servers:
  - url: /integration-test
paths:
  /audit-log:
    get:
      summary: gets the auditlog from mongo db
      tags:
        - IntegrationTestService
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string

  /reset-db:
    post:
      summary: resets the database
      operationId: resetDatabase
      tags:
        - IntegrationTestService
      responses:
        '200':
          description: success
  /reset-db-all:
    post:
      summary: resets the database including default hierarchy
      operationId: resetDatabaseAll
      tags:
        - IntegrationTestService
      responses:
        '200':
          description: success
  /createKeyPair:
    post:
      summary: create a new key
      operationId: createKeyPair
      tags:
        - IntegrationTestService
      parameters:
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: key pair
          content:
            application/json:
              schema:
                $ref: "api.yml#/components/schemas/KeyPair"

  /signLayoutMetaBlock:
    post:
      summary: signs a layout metablock
      operationId: signLayout
      tags:
        - IntegrationTestService
      parameters:
        - name: password
          in: query
          required: true
          schema:
            type: string
        - name: keyId
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "api.yml#/components/schemas/LayoutMetaBlock"
      responses:
        '200':
          description: signed layout metablock
          content:
            application/json:
              schema:
                $ref: "api.yml#/components/schemas/LayoutMetaBlock"

  /signLinkMetaBlock:
    post:
      summary: signs a link metablock
      operationId: signLink
      tags:
        - IntegrationTestService
      parameters:
        - name: password
          in: query
          required: true
          schema:
            type: string
        - name: keyId
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "api.yml#/components/schemas/LinkMetaBlock"
      responses:
        '200':
          description: signed link metablock
          content:
            application/json:
              schema:
                $ref: "api.yml#/components/schemas/LinkMetaBlock"
  /createPersonalAccount:
    post:
      summary: create personal account
      operationId: createPersonalAccount
      tags:
        - IntegrationTestService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonalAccount"
      responses:
        '200':
          description: created personal account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalAccountWithToken"
  /createToken:
    get:
      summary: create token
      operationId: createToken
      tags:
        - IntegrationTestService
      parameters:
        - name: accountId
          in: query
          required: true
          schema:
            type: string
        - name: issuedAt
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: created personal account
          content:
            application/json:
              schema:
                $ref: "api.yml#/components/schemas/Token"
  /deletePersonalAccount/{accountId}:
    delete:
      summary: delete account
      operationId: deletePersonalAccount
      tags:
        - IntegrationTestService
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: delete
components:
  schemas:
    PersonalAccountWithToken:
      allOf:
        - $ref: "#/components/schemas/PersonalAccount"
        - type: object
          required:
            - token
          properties:
            token:
              type: string
    PersonalAccount:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        email:
          type: string
          format: email
        roles:
          type: array
          items:
            $ref: "api.yml#/components/schemas/Role"
