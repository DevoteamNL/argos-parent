#
# Copyright (C) 2019 - 2020 Rabobank Nederland
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

openapi: 3.0.1
info:
  $ref: ./info/info.yml
servers:
  - url: /api
security:
  - bearerAuth: []

paths:
  $ref: ./paths/supplychain.yml
  $ref: ./paths/link.yml

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
  responses:
    ValidationError:
      description: validation error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Error:
      description: server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: unauthorized
  schemas:
    VerifyCommand:
      type: object
      required:
        - expectedProducts
      properties:
        expectedProducts:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/Artifact"

    VerificationResult:
      type: object
      required:
        - runIsValid
      properties:
        runIsValid:
          type: boolean

    LinkMetaBlock:
      type: object
      required:
        - signature
        - link
      properties:
        signature:
          $ref: "#/components/schemas/Signature"
        link:
          $ref: "#/components/schemas/Link"
    Signature:
      type: object
      required:
        - keyId
        - signature
      properties:
        keyId:
          $ref: '#/components/schemas/KeyId'
        signature:
          type: string
          minLength: 512
          maxLength: 1024
          pattern: '^[0-9a-f]*$'
    Link:
      type: object
      required:
        - runId
        - layoutSegmentName
        - stepName
        - command
        - materials
        - products
      properties:
        runId:
          type: string
        stepName:
          type: string
        layoutSegmentName:
          type: string
        command:
          type: array
          items:
            type: string
            pattern: '^[0-9a-f]*$'
        materials:
          type: array
          items:
            $ref: "#/components/schemas/Artifact"
        products:
          type: array
          items:
            $ref: "#/components/schemas/Artifact"
    Artifact:
      type: object
      required:
        - uri
        - hash
      properties:
        uri:
          type: string
          maxLength: 1024
          pattern: '^(?!.*\\).*$'
        hash:
          type: string
          minLength: 64
          maxLength: 64
          pattern: '^[0-9a-f]*$'
    KeyPair:
      type: object
      required:
        - keyId
        - publicKey
      properties:
        keyId:
          $ref: '#/components/schemas/KeyId'
        publicKey:
          type: string
          format: byte
        encryptedPrivateKey:
          type: string
          format: byte
    NonPersonalAccountKeyPair:
      type: object
      required:
        - keyId
        - publicKey
        - hashedKeyPassphrase
        - encryptedPrivateKey
      properties:
        keyId:
          $ref: '#/components/schemas/KeyId'
        publicKey:
          type: string
          format: byte
        hashedKeyPassphrase:
          type: string
          writeOnly: true
          description: used for authentication of a non personal account via http basic authentication
        encryptedPrivateKey:
          type: string
          format: byte
    SupplyChain:
      type: object
      required:
        - name
        - parentLabelId
      properties:
        id:
          type: string
          maxLength: 36
          readOnly: true
        name:
          type: string
          maxLength: 256
          pattern: '^([a-z]{1}[a-z0-9-]*)?$'
        parentLabelId:
          type: string
          minLength: 36
          maxLength: 36
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}?$'
    PublicKey:
      type: object
      required:
        - id
        - key
      properties:
        id:
          $ref: '#/components/schemas/KeyId'
        key:
          type: string
          format: byte
    LayoutMetaBlock:
      type: object
      required:
        - signatures
        - layout
      properties:
        id:
          type: string
          readOnly: true
        signatures:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Signature"
        layout:
          $ref: "#/components/schemas/Layout"
    Layout:
      type: object
      required:
        - keys
        - authorizedKeyIds
        - expectedEndProducts
        - layoutSegments
      properties:
        keys:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/PublicKey'
        authorizedKeyIds:
          type: array
          minItems: 1
          items:
            type: string
            description: key id is a hash of the public key
            minLength: 64
            maxLength: 64
            pattern: '^[0-9a-f]*$'
        expectedEndProducts:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/MatchRule'
        layoutSegments:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/LayoutSegment"
    LayoutSegment:
      type: object
      required:
        - name
        - steps
      properties:
        name:
          type: string
        steps:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/Step"
    MatchRule:
      type: object
      required:
        - pattern
        - destinationType
        - destinationSegmentName
        - destinationStepName
      properties:
        pattern:
          type: string
        sourcePathPrefix:
          type: string
          maxLength: 1024
          pattern: '^(?!.*\\).*$'
        destinationType:
          type: string
          enum:
            - PRODUCTS
            - MATERIALS
        destinationPathPrefix:
          type: string
          maxLength: 1024
          pattern: '^(?!.*\\).*$'
        destinationSegmentName:
          type: string
        destinationStepName:
          type: string
    Step:
      type: object
      required:
        - name
        - requiredSignatures
        - authorizedKeyIds
        - expectedMaterials
        - expectedProducts
        - expectedCommand
      properties:
        name:
          type: string
        authorizedKeyIds:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/KeyId'
        requiredNumberOfLinks:
          type: integer
          format: int32
          minimum: 1
        expectedCommand:
          type: array
          items:
            type: string
            pattern: '^[0-9a-f]*$'
        expectedMaterials:
          type: array
          items:
            $ref: "#/components/schemas/Rule"
        expectedProducts:
          type: array
          items:
            $ref: "#/components/schemas/Rule"
    KeyId:
      type: string
      description: key id is a hash of the public key
      minLength: 64
      maxLength: 64
      pattern: '^[0-9a-f]*$'
    Rule:
      type: object
      required:
        - ruleType
        - pattern
      properties:
        ruleType:
          type: string
          enum:
            - ALLOW
            - CREATE
            - DELETE
            - DISALLOW
            - MATCH
            - MODIFY
            - REQUIRE
        pattern:
          type: string
        sourcePathPrefix:
          type: string
        destinationPathPrefix:
          type: string
        destinationSegmentName:
          type: string
        destinationType:
          type: string
          enum:
            - PRODUCTS
            - MATERIALS
        destinationStepName:
          type: string
    Label:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          minLength: 1
          pattern: '^([a-z]{1}[a-z0-9_]*)?$'
        parentLabelId:
          type: string
          minLength: 36
          maxLength: 36
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}?$'
    TreeNode:
      type: object
      required:
        - name
        - type
        - referenceId
        - children
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - LABEL
            - SUPPLY_CHAIN
            - NON_PERSONAL_ACCOUNT
        referenceId:
          type: string
        hasChildren:
          type: boolean
        children:
          type: array
          items:
            $ref: "#/components/schemas/TreeNode"
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/Permission"
    HierarchyMode:
      type: string
      enum:
        - ALL
        - NONE
        - MAX_DEPTH
      default: NONE
      description: The mode of the returned descendants in a tree node hierarchy. ALL returns all descendants, NONE returns nodes without any descendants , MAX_DEPTH returns descendants up to a specified depth
    PersonalAccount:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        email:
          type: string
          format: email
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
    NonPersonalAccount:
      type: object
      required:
        - name
        - parentLabelId
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        parentLabelId:
          type: string
          minLength: 36
          maxLength: 36
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}?$'
    Role:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          readOnly: true
          maxLength: 36
        name:
          type: string
          minLength: 1
          pattern: '^([a-z]{1}[a-z0-9_]*)?$'
        permissions:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/Permission"
    Permission:
      type: string
      enum:
        - READ
        - TREE_EDIT
        - LOCAL_PERMISSION_EDIT
        - ASSIGN_ROLE
        - LINK_ADD
        - LAYOUT_ADD
        - VERIFY
    LocalPermissions:
      type: object
      required:
        - labelId
        - permissions
      properties:
        labelId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}?$'
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/Permission"
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
